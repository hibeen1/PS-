Given a table events with the following structure:

  create table events (
      event_type integer not null,
      value integer not null,
      time timestamp not null,
      unique(event_type, time)
  );
write an SQL query that, for each event_type that has been registered more than once, returns the difference between the latest (i.e. the most recent in terms of time) and the second latest value. The table should be ordered by event_type (in ascending order).

For example, given the following data:

   event_type | value      | time
  ------------+------------+--------------------
   2          | 5          | 2015-05-09 12:42:00
   4          | -42        | 2015-05-09 13:19:57
   2          | 2          | 2015-05-09 14:48:30
   2          | 7          | 2015-05-09 12:54:39
   3          | 16         | 2015-05-09 13:19:57
   3          | 20         | 2015-05-09 15:01:09
your query should return the following rowset:

   event_type | value
  ------------+-----------
   2          | -5
   3          | 4
For the event_type 2, the latest value is 2 and the second latest value is 7, so the difference between them is −5.

The names of the columns in the rowset don't matter, but their order does.






답 1

select team_id, team_name, 
coalesce(sum(case when team_id = host_team then 
    (
    case when host_goals > guest_goals then 3
    when host_goals = guest_goals then 1
    when host_goals < guest_goals then 0
    end
    ) 
when team_id = guest_team then
    (
    case when guest_goals > host_goals then 3
    when guest_goals = host_goals then 1
    when guest_goals < host_goals then 0
    end
    )
    end), 0) as num_points
from Teams
left join Matches
on 
Teams.team_id = Matches.host_team
or Teams.team_id = Matches.guest_team
group by team_id, team_name
order by num_points desc, team_id;



답 2

WITH points_per_game AS(
SELECT 
    t.team_id as team_id,
    t.team_name as team_name,
    CASE
        WHEN t.team_id = m.host_team
            AND host_goals > guest_goals 
        THEN 3
        WHEN t.team_id = m.host_team 
            AND host_goals < guest_goals 
        THEN 0 
        WHEN t.team_id = guest_team
            AND guest_goals > host_goals
        THEN 3 
        WHEN t.team_id = guest_team
            AND guest_goals < host_goals
        THEN 0
        WHEN guest_goals IS NULL
        THEN 0
        ELSE 1
    END as game_points
FROM teams t
LEFT JOIN matches m ON t.team_id = m.host_team 
    OR t.team_id = m.guest_team
) 
SELECT team_id, team_name, SUM(game_points) 
FROM points_per_game
GROUP BY 1,2
ORDER BY SUM(game_points) DESC, team_id ASC